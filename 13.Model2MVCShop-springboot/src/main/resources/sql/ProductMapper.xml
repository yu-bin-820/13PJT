<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.model2.mvc.service.product.ProductDao">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 		column="PROD_NO" 			jdbcType="INTEGER"/>
		<result property="prodName"		column="PROD_NAME" 			jdbcType="VARCHAR" />
		<result property="prodDetail" 	column="PROD_DETAIL" 		jdbcType="VARCHAR" />
		<result property="manuDate" 	column="MANUFACTURE_DAY" 	jdbcType="VARCHAR" />
		<result property="price" 		column="PRICE" 				jdbcType="INTEGER" />
		<result property="fileName" 	column="IMAGE_FILE" 		jdbcType="VARCHAR" />
		<result property="regDate" 		column="REG_DATE" 			jdbcType="DATE" />
		<result property="proTranCode" 	column="tran_status_code" 	jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="insertProduct"		parameterType="product" >
	 	insert into product
	 	values (SEQ_PRODUCT_PROD_NO.NEXTVAL, #{prodName:VARCHAR}, #{prodDetail:VARCHAR}, #{manuDate:VARCHAR}, #{price:INTEGER}, #{fileName:VARCHAR}, sysdate)
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="findProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		PROD_NO , PROD_NAME , PROD_DETAIL , MANUFACTURE_DAY ,  PRICE ,  IMAGE_FILE , REG_DATE		
		FROM product 
		WHERE PROD_NO = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_NAME 	= #{prodName:VARCHAR} ,
			PROD_DETAIL	= #{prodDetail:VARCHAR},
			MANUFACTURE_DAY = #{manuDate:VARCHAR} ,
			price		=	#{price:INTEGER},
			IMAGE_FILE		=	#{fileName:VARCHAR}
	   	</set>
	   	WHERE PROD_NO = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , @ROWNUM := @ROWNUM+1 AS row_seq
	  					FROM		(	SELECT product.PROD_NO , product.PROD_NAME , product.PROD_DETAIL , product.MANUFACTURE_DAY ,  product.PRICE ,  product.IMAGE_FILE , product.REG_DATE, TRIM(IFNULL(transaction.tran_status_code,0)) tran_status_code
											FROM product left join transaction
											ON product.prod_no=transaction.prod_no
											<where>
											<if test="searchCondition != null">
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				and product.PROD_NO like '${searchKeyword}%'
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				and product.PROD_NAME like '%${searchKeyword}%'
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				and product.PRICE like '%${searchKeyword}%'
													</if>
											</if>
											</where>
											ORDER BY PROD_NO ) inner_table, (SELECT @ROWNUM :=0) TMP
						WHERE (@ROWNUM :=0) &lt;= #{endRowNum} ) AS A
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT PROD_NO , PROD_NAME , PROD_DETAIL , MANUFACTURE_DAY ,  PRICE ,  IMAGE_FILE , REG_DATE
						FROM product
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
									PROD_NO like '${searchKeyword}%'
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
									PROD_NAME like '${searchKeyword}%'
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
									PRICE like '${searchKeyword}%'
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
	 <select  id="autocompleteProductName" 	resultType="String">
	  	SELECT PROD_NAME
	  	FROM product
		ORDER BY PROD_NAME
	 </select>
	 
	 <select  id="autocompleteProductNo" 	resultType="String">
	  	SELECT PROD_NO
	  	FROM product
		ORDER BY PROD_NO
	 </select>
	 
	 <select  id="autocompleteProductPrice" 	resultType="String">
	  	SELECT PRICE
	  	FROM product
		ORDER BY PRICE
	 </select>
</mapper>